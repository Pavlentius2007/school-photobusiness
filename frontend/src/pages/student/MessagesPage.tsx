import React, { useState } from 'react';

const MessagesPage: React.FC = () => {
  const [messages] = useState([
    {
      id: 1,
      from: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
      subject: '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø–æ –∑–∞–¥–∞–Ω–∏—é',
      content: '–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –Ω–∞–¥ –∑–∞–¥–∞–Ω–∏–µ–º –ø–æ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏! –í–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É—é—Ç —Ö–æ—Ä–æ—à–µ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏. –û—Å–æ–±–µ–Ω–Ω–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ä–∞–±–æ—Ç–∞ —Å –≤–µ–¥—É—â–∏–º–∏ –ª–∏–Ω–∏—è–º–∏.',
      course: '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
      timestamp: '2024-02-10T14:30:00',
      read: false,
      type: 'feedback',
      priority: 'normal'
    },
    {
      id: 2,
      from: '–°–∏—Å—Ç–µ–º–∞',
      subject: '–ù–æ–≤—ã–π —É—Ä–æ–∫ –¥–æ—Å—Ç—É–ø–µ–Ω',
      content: '–£—Ä–æ–∫ 8 "–†–∞–±–æ—Ç–∞ —Å–æ —Å–≤–µ—Ç–æ–º" –∫—É—Ä—Å–∞ "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö" —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è.',
      course: '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
      timestamp: '2024-02-09T10:15:00',
      read: true,
      type: 'system',
      priority: 'normal'
    },
    {
      id: 3,
      from: '–ú–∏—Ö–∞–∏–ª –°–∏–¥–æ—Ä–æ–≤',
      subject: '–í–æ–ø—Ä–æ—Å –ø–æ –ø–æ—Ä—Ç—Ä–µ—Ç–Ω–æ–π —Å—ä–µ–º–∫–µ',
      content: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –£ –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —É—Ä–æ–∫—É –ø–æ –ø–æ—Ä—Ç—Ä–µ—Ç–Ω–æ–π —Å—ä–µ–º–∫–µ? –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –ª—é–±—ã–º–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –º–æ–º–µ–Ω—Ç–∞–º–∏.',
      course: '–ü–æ—Ä—Ç—Ä–µ—Ç–Ω–∞—è —Å—ä–µ–º–∫–∞',
      timestamp: '2024-02-08T16:45:00',
      read: false,
      type: 'instructor',
      priority: 'high'
    },
    {
      id: 4,
      from: '–ï–ª–µ–Ω–∞ –ö–æ–∑–ª–æ–≤–∞',
      subject: '–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ —Ç–µ—Å—Ç–µ',
      content: '–ù–∞–ø–æ–º–∏–Ω–∞—é, —á—Ç–æ –∑–∞–≤—Ç—Ä–∞ —Å–æ—Å—Ç–æ–∏—Ç—Å—è —Ç–µ—Å—Ç –ø–æ —Å—Ç—É–¥–∏–π–Ω–æ–º—É –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—é. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∏–∑—É—á–∏–ª–∏ –≤—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã.',
      course: '–°—Ç—É–¥–∏–π–Ω–∞—è —Å—ä–µ–º–∫–∞',
      timestamp: '2024-02-07T12:20:00',
      read: true,
      type: 'reminder',
      priority: 'high'
    },
    {
      id: 5,
      from: '–°–∏—Å—Ç–µ–º–∞',
      subject: '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–ª—É—á–µ–Ω',
      content: '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∫—É—Ä—Å "–ü–µ–π–∑–∞–∂–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è" –∏ –ø–æ–ª—É—á–∏–ª–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç.',
      course: '–ü–µ–π–∑–∞–∂–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è',
      timestamp: '2024-02-06T09:30:00',
      read: true,
      type: 'certificate',
      priority: 'normal'
    },
    {
      id: 6,
      from: '–î–º–∏—Ç—Ä–∏–π –í–æ–ª–∫–æ–≤',
      subject: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
      content: '–ü—Ä–∏–≤–µ—Ç! –ü–æ–¥–≥–æ—Ç–æ–≤–∏–ª –¥–ª—è –≤–∞—Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –ø–µ–π–∑–∞–∂–Ω–æ–π —Å—ä–µ–º–∫–µ. –û–Ω–∏ –ø–æ–º–æ–≥—É—Ç —É–≥–ª—É–±–∏—Ç—å –∑–Ω–∞–Ω–∏—è –ø–æ —Ç–µ–º–µ.',
      course: '–ü–µ–π–∑–∞–∂–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è',
      timestamp: '2024-02-05T15:10:00',
      read: true,
      type: 'materials',
      priority: 'normal'
    }
  ]);

  const [selectedMessage, setSelectedMessage] = useState<number | null>(null);
  const [filter, setFilter] = useState('all');
  const [searchTerm, setSearchTerm] = useState('');

  const filteredMessages = messages.filter(message => {
    const matchesFilter = filter === 'all' || message.type === filter;
    const matchesSearch = message.subject.toLowerCase().includes(searchTerm.toLowerCase()) ||
                          message.from.toLowerCase().includes(searchTerm.toLowerCase()) ||
                          message.content.toLowerCase().includes(searchTerm.toLowerCase());
    return matchesFilter && matchesSearch;
  });

  const unreadCount = messages.filter(m => !m.read).length;

  const getTypeIcon = (type: string) => {
    switch (type) {
      case 'feedback': return 'üìù';
      case 'system': return 'üîî';
      case 'instructor': return 'üë®‚Äçüè´';
      case 'reminder': return '‚è∞';
      case 'certificate': return 'üèÜ';
      case 'materials': return 'üìö';
      default: return 'üí¨';
    }
  };

  const getPriorityColor = (priority: string) => {
    switch (priority) {
      case 'high': return '#e53e3e';
      case 'normal': return '#667eea';
      case 'low': return '#a0aec0';
      default: return '#667eea';
    }
  };

  const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    const now = new Date();
    const diffInHours = Math.floor((now.getTime() - date.getTime()) / (1000 * 60 * 60));
    
    if (diffInHours < 1) return '–¢–æ–ª—å–∫–æ —á—Ç–æ';
    if (diffInHours < 24) return `${diffInHours} —á –Ω–∞–∑–∞–¥`;
    if (diffInHours < 48) return '–í—á–µ—Ä–∞';
    return date.toLocaleDateString('ru-RU');
  };

  const markAsRead = (messageId: number) => {
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—ã–ª –±—ã API –≤—ã–∑–æ–≤
    console.log(`Marking message ${messageId} as read`);
  };

  return (
    <div>
      <div style={{
        marginBottom: '30px'
      }}>
        <h1 style={{
          fontSize: '32px',
          fontWeight: 'bold',
          color: '#2d3748',
          marginBottom: '10px'
        }}>
          –°–æ–æ–±—â–µ–Ω–∏—è
        </h1>
        <p style={{
          fontSize: '16px',
          color: '#718096',
          margin: 0
        }}>
          –û–±—â–∞–π—Ç–µ—Å—å —Å –∫—É—Ä–∞—Ç–æ—Ä–∞–º–∏ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        </p>
      </div>

      <div style={{
        display: 'grid',
        gridTemplateColumns: '1fr 2fr',
        gap: '30px'
      }}>
        {/* –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π */}
        <div style={{
          background: 'white',
          borderRadius: '12px',
          boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',
          border: '1px solid #e2e8f0',
          overflow: 'hidden'
        }}>
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã */}
          <div style={{
            padding: '20px',
            borderBottom: '1px solid #e2e8f0',
            background: '#f7fafc'
          }}>
            <div style={{
              display: 'flex',
              justifyContent: 'space-between',
              alignItems: 'center',
              marginBottom: '15px'
            }}>
              <h2 style={{
                fontSize: '18px',
                fontWeight: 'bold',
                color: '#2d3748',
                margin: 0
              }}>
                –í—Ö–æ–¥—è—â–∏–µ ({messages.length})
              </h2>
              {unreadCount > 0 && (
                <span style={{
                  background: '#e53e3e',
                  color: 'white',
                  padding: '2px 8px',
                  borderRadius: '12px',
                  fontSize: '12px',
                  fontWeight: 'bold'
                }}>
                  {unreadCount}
                </span>
              )}
            </div>

            {/* –ü–æ–∏—Å–∫ */}
            <input
              type="text"
              placeholder="–ü–æ–∏—Å–∫ —Å–æ–æ–±—â–µ–Ω–∏–π..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              style={{
                width: '100%',
                padding: '10px 12px',
                border: '1px solid #e2e8f0',
                borderRadius: '6px',
                fontSize: '14px',
                outline: 'none',
                marginBottom: '15px'
              }}
            />

            {/* –§–∏–ª—å—Ç—Ä—ã */}
            <div style={{
              display: 'flex',
              flexDirection: 'column',
              gap: '8px'
            }}>
              <button
                onClick={() => setFilter('all')}
                style={{
                  background: filter === 'all' ? 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' : 'transparent',
                  color: filter === 'all' ? 'white' : '#4a5568',
                  border: 'none',
                  padding: '8px 12px',
                  borderRadius: '6px',
                  fontSize: '14px',
                  fontWeight: 'bold',
                  cursor: 'pointer',
                  textAlign: 'left',
                  transition: 'all 0.3s ease'
                }}
              >
                –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
              </button>
              <button
                onClick={() => setFilter('instructor')}
                style={{
                  background: filter === 'instructor' ? 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' : 'transparent',
                  color: filter === 'instructor' ? 'white' : '#4a5568',
                  border: 'none',
                  padding: '8px 12px',
                  borderRadius: '6px',
                  fontSize: '14px',
                  fontWeight: 'bold',
                  cursor: 'pointer',
                  textAlign: 'left',
                  transition: 'all 0.3s ease'
                }}
              >
                –û—Ç –∫—É—Ä–∞—Ç–æ—Ä–æ–≤
              </button>
              <button
                onClick={() => setFilter('system')}
                style={{
                  background: filter === 'system' ? 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' : 'transparent',
                  color: filter === 'system' ? 'white' : '#4a5568',
                  border: 'none',
                  padding: '8px 12px',
                  borderRadius: '6px',
                  fontSize: '14px',
                  fontWeight: 'bold',
                  cursor: 'pointer',
                  textAlign: 'left',
                  transition: 'all 0.3s ease'
                }}
              >
                –°–∏—Å—Ç–µ–º–Ω—ã–µ
              </button>
              <button
                onClick={() => setFilter('feedback')}
                style={{
                  background: filter === 'feedback' ? 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)' : 'transparent',
                  color: filter === 'feedback' ? 'white' : '#4a5568',
                  border: 'none',
                  padding: '8px 12px',
                  borderRadius: '6px',
                  fontSize: '14px',
                  fontWeight: 'bold',
                  cursor: 'pointer',
                  textAlign: 'left',
                  transition: 'all 0.3s ease'
                }}
              >
                –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
              </button>
            </div>
          </div>

          {/* –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π */}
          <div style={{
            maxHeight: '600px',
            overflowY: 'auto'
          }}>
            {filteredMessages.map(message => (
              <div
                key={message.id}
                onClick={() => {
                  setSelectedMessage(message.id);
                  if (!message.read) markAsRead(message.id);
                }}
                style={{
                  padding: '15px 20px',
                  borderBottom: '1px solid #e2e8f0',
                  cursor: 'pointer',
                  background: selectedMessage === message.id ? '#f7fafc' : 'white',
                  transition: 'all 0.3s ease',
                  borderLeft: message.read ? 'none' : '4px solid #667eea'
                }}
              >
                <div style={{
                  display: 'flex',
                  alignItems: 'flex-start',
                  gap: '12px'
                }}>
                  <span style={{
                    fontSize: '20px',
                    marginTop: '2px'
                  }}>
                    {getTypeIcon(message.type)}
                  </span>
                  <div style={{ flex: 1 }}>
                    <div style={{
                      display: 'flex',
                      justifyContent: 'space-between',
                      alignItems: 'flex-start',
                      marginBottom: '5px'
                    }}>
                      <h3 style={{
                        fontSize: '14px',
                        fontWeight: 'bold',
                        color: message.read ? '#4a5568' : '#2d3748',
                        margin: '0 0 3px 0',
                        lineHeight: '1.3'
                      }}>
                        {message.subject}
                      </h3>
                      <span style={{
                        fontSize: '12px',
                        color: '#a0aec0'
                      }}>
                        {formatDate(message.timestamp)}
                      </span>
                    </div>
                    <p style={{
                      fontSize: '13px',
                      color: '#718096',
                      margin: '0 0 5px 0',
                      fontWeight: message.read ? 'normal' : 'bold'
                    }}>
                      {message.from}
                    </p>
                    <p style={{
                      fontSize: '12px',
                      color: '#a0aec0',
                      margin: 0
                    }}>
                      {message.course}
                    </p>
                    {message.priority === 'high' && (
                      <span style={{
                        background: '#e53e3e',
                        color: 'white',
                        padding: '1px 6px',
                        borderRadius: '4px',
                        fontSize: '10px',
                        fontWeight: 'bold',
                        marginTop: '5px',
                        display: 'inline-block'
                      }}>
                        –í–∞–∂–Ω–æ
                      </span>
                    )}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* –î–µ—Ç–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è */}
        <div style={{
          background: 'white',
          borderRadius: '12px',
          boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',
          border: '1px solid #e2e8f0',
          overflow: 'hidden'
        }}>
          {selectedMessage ? (
            (() => {
              const message = messages.find(m => m.id === selectedMessage);
              if (!message) return null;
              
              return (
                <>
                  <div style={{
                    padding: '25px',
                    borderBottom: '1px solid #e2e8f0',
                    background: '#f7fafc'
                  }}>
                    <div style={{
                      display: 'flex',
                      alignItems: 'center',
                      gap: '15px',
                      marginBottom: '15px'
                    }}>
                      <span style={{
                        fontSize: '32px'
                      }}>
                        {getTypeIcon(message.type)}
                      </span>
                      <div style={{ flex: 1 }}>
                        <h2 style={{
                          fontSize: '20px',
                          fontWeight: 'bold',
                          color: '#2d3748',
                          margin: '0 0 5px 0'
                        }}>
                          {message.subject}
                        </h2>
                        <p style={{
                          fontSize: '14px',
                          color: '#718096',
                          margin: 0
                        }}>
                          {message.from} ‚Ä¢ {message.course}
                        </p>
                      </div>
                      <div style={{
                        textAlign: 'right'
                      }}>
                        <p style={{
                          fontSize: '12px',
                          color: '#a0aec0',
                          margin: '0 0 3px 0'
                        }}>
                          {formatDate(message.timestamp)}
                        </p>
                        {message.priority === 'high' && (
                          <span style={{
                            background: '#e53e3e',
                            color: 'white',
                            padding: '2px 8px',
                            borderRadius: '12px',
                            fontSize: '10px',
                            fontWeight: 'bold'
                          }}>
                            –í–∞–∂–Ω–æ
                          </span>
                        )}
                      </div>
                    </div>
                  </div>

                  <div style={{
                    padding: '25px'
                  }}>
                    <div style={{
                      background: '#f7fafc',
                      padding: '20px',
                      borderRadius: '8px',
                      border: '1px solid #e2e8f0',
                      marginBottom: '20px'
                    }}>
                      <p style={{
                        fontSize: '16px',
                        color: '#4a5568',
                        lineHeight: '1.6',
                        margin: 0
                      }}>
                        {message.content}
                      </p>
                    </div>

                    <div style={{
                      display: 'flex',
                      gap: '10px'
                    }}>
                      <button style={{
                        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
                        color: 'white',
                        border: 'none',
                        padding: '10px 20px',
                        borderRadius: '6px',
                        fontSize: '14px',
                        fontWeight: 'bold',
                        cursor: 'pointer',
                        transition: 'all 0.3s ease'
                      }}>
                        –û—Ç–≤–µ—Ç–∏—Ç—å
                      </button>
                      <button style={{
                        background: '#f7fafc',
                        color: '#4a5568',
                        border: '1px solid #e2e8f0',
                        padding: '10px 20px',
                        borderRadius: '6px',
                        fontSize: '14px',
                        fontWeight: 'bold',
                        cursor: 'pointer',
                        transition: 'all 0.3s ease'
                      }}>
                        –ü–µ—Ä–µ—Å–ª–∞—Ç—å
                      </button>
                      <button style={{
                        background: '#f7fafc',
                        color: '#e53e3e',
                        border: '1px solid #e2e8f0',
                        padding: '10px 20px',
                        borderRadius: '6px',
                        fontSize: '14px',
                        fontWeight: 'bold',
                        cursor: 'pointer',
                        transition: 'all 0.3s ease'
                      }}>
                        –£–¥–∞–ª–∏—Ç—å
                      </button>
                    </div>
                  </div>
                </>
              );
            })()
          ) : (
            <div style={{
              padding: '60px 20px',
              textAlign: 'center',
              color: '#a0aec0'
            }}>
              <div style={{
                fontSize: '48px',
                marginBottom: '20px'
              }}>
                üí¨
              </div>
              <h3 style={{
                fontSize: '20px',
                fontWeight: 'bold',
                marginBottom: '10px'
              }}>
                –í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
              </h3>
              <p style={{
                fontSize: '14px',
                margin: 0
              }}>
                –í—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–ª–µ–≤–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
              </p>
            </div>
          )}
        </div>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div style={{
        background: 'white',
        padding: '25px',
        borderRadius: '12px',
        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',
        border: '1px solid #e2e8f0',
        marginTop: '30px'
      }}>
        <h2 style={{
          fontSize: '24px',
          fontWeight: 'bold',
          color: '#2d3748',
          marginBottom: '20px'
        }}>
          –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
        </h2>
        
        <div style={{
          display: 'grid',
          gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
          gap: '20px'
        }}>
          <div style={{
            textAlign: 'center',
            padding: '20px',
            background: '#f7fafc',
            borderRadius: '8px'
          }}>
            <div style={{
              fontSize: '32px',
              fontWeight: 'bold',
              color: '#667eea',
              marginBottom: '5px'
            }}>
              {messages.length}
            </div>
            <div style={{
              fontSize: '14px',
              color: '#718096'
            }}>
              –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π
            </div>
          </div>
          
          <div style={{
            textAlign: 'center',
            padding: '20px',
            background: '#f7fafc',
            borderRadius: '8px'
          }}>
            <div style={{
              fontSize: '32px',
              fontWeight: 'bold',
              color: '#e53e3e',
              marginBottom: '5px'
            }}>
              {unreadCount}
            </div>
            <div style={{
              fontSize: '14px',
              color: '#718096'
            }}>
              –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö
            </div>
          </div>
          
          <div style={{
            textAlign: 'center',
            padding: '20px',
            background: '#f7fafc',
            borderRadius: '8px'
          }}>
            <div style={{
              fontSize: '32px',
              fontWeight: 'bold',
              color: '#48bb78',
              marginBottom: '5px'
            }}>
              {messages.filter(m => m.type === 'instructor').length}
            </div>
            <div style={{
              fontSize: '14px',
              color: '#718096'
            }}>
              –û—Ç –∫—É—Ä–∞—Ç–æ—Ä–æ–≤
            </div>
          </div>
          
          <div style={{
            textAlign: 'center',
            padding: '20px',
            background: '#f7fafc',
            borderRadius: '8px'
          }}>
            <div style={{
              fontSize: '32px',
              fontWeight: 'bold',
              color: '#ed8936',
              marginBottom: '5px'
            }}>
              {messages.filter(m => m.priority === 'high').length}
            </div>
            <div style={{
              fontSize: '14px',
              color: '#718096'
            }}>
              –í–∞–∂–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default MessagesPage; 